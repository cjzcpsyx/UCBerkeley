1. infile = (FILE *) 0x7ffff7dd4640 <_IO_2_1_stdin_>

2. *infile = {_flags = -72540024, _IO_read_ptr = 0x0, _IO_read_end = 0x0, 
  _IO_read_base = 0x0, _IO_write_base = 0x0, _IO_write_ptr = 0x0, 
  _IO_write_end = 0x0, _IO_buf_base = 0x0, _IO_buf_end = 0x0, 
  _IO_save_base = 0x0, _IO_backup_base = 0x0, _IO_save_end = 0x0, 
  _markers = 0x0, _chain = 0x0, _fileno = 0, _flags2 = 0, _old_offset = -1, 
  _cur_column = 0, _vtable_offset = 0 '\000', _shortbuf = "", 
  _lock = 0x7ffff7dd59f0 <_IO_stdfile_0_lock>, _offset = -1, __pad1 = 0x0, 
  __pad2 = 0x7ffff7dd4720 <_IO_wide_data_0>, __pad3 = 0x0, __pad4 = 0x0, 
  __pad5 = 0, _mode = 0, _unused2 = '\000' <repeats 19 times>}

3. ofile = (FILE *) 0x7ffff7dd4400 <_IO_2_1_stdout_>

4. 0x40077d

5. it prints a backtrace of stack frames. with main function and wc function in the stack.

6. This command prints a description of the selected stack frame. And the description includes: 1) the address of the frame; 2) the language in which the source code corresponding to this frame is written; 3) the address of the frame's argument; 4) the address of the frame's ;ocal variables; 5) the program counter; 6) registers were saved in the frame.

7. rbp -> base pointer
   rsp -> stack pointer
   cs -> code segment
   ds -> data segment
   ss -> stack segment
   es,fs,gs -> extra segment
   more infomation at http://msdn.microsoft.com/en-us/library/windows/hardware/ff561499(v=vs.85).aspx which provides a register documentation about registers in x64 architecture
